environment:
  GENERATOR: "MinGW Makefiles"
  ARTIFACT_BRANCH: master-artifacts
  matrix:

    - job_name: 'OS X'
      job_group: 'Mac OS X'
      appveyor_build_worker_image: macos


build:
  verbosity: detailed

matrix:
  exclude:
    - job_name: Windows32
      branches: "master"

for:
  - 
    cache: /Users/appveyor/cache_dir
    matrix:
      only:
        - job_group: 'Mac OS X'

    before_build: |-
      export MACOSX_DEPLOYMENT_TARGET=10.12
      sudo ln -s /usr/local /opt/local;
      cdir=$HOME/cache_dir
      cache_tar=$cdir/usrlocal.tar
      cache=$cache_tar.xz
      export $cache

      if [ -d $cdir ] && [ -f $cache ]; then
        echo "=== Unpacking cached Homebrew $cache ==="
        ( cd /; tar xf $cache )
        echo "done"
      else
        echo "=== Building dependencies ==="

        echo "Recording /usr/local state"
        python3 ./treestate.py scan /usr/local usrlocal.json

        brew update
        # Build libsndfile and bdb from source to enable building for 10.12
        brew install --build-from-source ./macos/HomebrewFormulae/berkeley-db.rb
        brew install --build-from-source ./macos/HomebrewFormulae/libogg.rb
        brew install --build-from-source ./macos/HomebrewFormulae/libvorbis.rb
        brew install --build-from-source ./macos/HomebrewFormulae/libsndfile.rb

        brew install qt5
        brew install libarchive
        brew install libsndfile jack pulseaudio cppunit

      fi
      export CMAKE_PREFIX_PATH="$(brew --prefix qt5)";
      export PKG_CONFIG_PATH="$(brew --prefix libarchive)/lib/pkgconfig";

    build_script: |-
      # fix use of register keyword in jack: https://github.com/jackaudio/jack1/issues/84
      sed -i '' 's/, int register,/, int,/g' /opt/local/include/jack/types.h

      CPUS=$(sysctl -n hw.ncpu)

      if [ -d $cdir ] && [ -f $cache ]; then
        echo "Building using cached homebrew from $cache"
      else
        (
          echo "=== Creating cache tarball $cache ==="
          echo "Scan updated /usr/local"
          python3 ./treestate.py updates usrlocal.json /usr/local | fgrep -v .git > updated_list
          echo $( wc -l updated_list ) updates
          mkdir -p $cdir
          nice tar cf $cache_tar -T updated_list
          nice xz -9v -T$CPUS $cache_tar
          ls -al $cdir
        ) 2>&1 | sed 's/^/CACHE: /' &
      fi


      git submodule init && git submodule update
      echo "Building with $CPUS cpus"
      mkdir build && cd build && cmake -DWANT_LASH=1 -DWANT_LRDF=1 -DWANT_RUBBERBAND=1 .. && make -j $CPUS

      (
        PATH="$(brew --prefix qt5)/bin:$PATH"
        ../macos/build_dmg.sh -v src/gui/hydrogen.app Hydrogen${PKG_SUFFIX}.dmg

        #deploy dmg only on branch $ARTIFACT_BRANCH
        if [ "$APPVEYOR_REPO_BRANCH" = "$ARTIFACT_BRANCH" ]; then appveyor PushArtifact Hydrogen*.dmg -DeploymentName Installer; fi
      ) | sed 's/^/DMG: /' &

    test_script: |-
      TMPDIR=/tmp src/tests/tests --appveyor || exit 1
      echo "Waiting"
      wait

  -
    matrix:
      only:
        - job_group: 'Windows'

    before_build:
      cmd: |-

          if not %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH% if %job_name%==Windows32 appveyor exit

          set QTDIR=%MSYS%
          set CMAKE_PREFIX_PATH=%QTDIR%
          set PATH=%MSYS%\bin;%PATH%
          set PKG_CONFIG_PATH=%MSYS%\lib\pkgconfig

          cmake --version
          g++ --version
          choco install %CHOCO_ARCH% -y jack

          dir "c:\%PROGRAM_FILES%\JACK2"
          dir "c:\%PROGRAM_FILES%\JACK2\lib"

          REM *** Install dependencies ***
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-libarchive
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-libsndfile
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-cppunit
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-portaudio
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-portmidi
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-libwinpthread-git
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-qt5
          c:\msys64\usr\bin\pacman --noconfirm -S -q %MSYS_REPO%-ladspa-sdk

          REM *** INIT SUBMODULES ***
          git submodule init
          git submodule update

          REM *** Configure build ***
          rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
          mkdir build
          cd build
          cmake -G "%GENERATOR%" -DCMAKE_BUILD_TYPE=%BUILD_TYPE% %CMAKE_FLAGS% -DJACK_INCLUDE_DIRS="c:/%PROGRAM_FILES%/JACK2/include" -DJACK_LIBRARIES="c:/%PROGRAM_FILES%/JACK2/lib/%LIBJACK%.a" ..

    build_script:
      - cmd: |-
          if not %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH% if %job_name%==Windows32 exit

          REM *** Build ***
          set VERBOSE=1
          cmake --build . -j %NUMBER_OF_PROCESSORS%

          REM *** Run tests and report results ***
          set H2_HOME=%APPVEYOR_BUILD_FOLDER%
          echo %H2_HOME%
          SET CORE_PATH=%cd%\src\core
          echo %CORE_PATH%
          set PATH=%CORE_PATH%;%PATH%
          src\tests\tests.exe --appveyor || cmd /c "exit /b 0"
          7z a %APPVEYOR_BUILD_FOLDER%\testresults.zip %TEMP%\hydrogen || cmd /c "exit  /b 0"
          if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH% appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\testresults.zip

          mkdir %APPVEYOR_BUILD_FOLDER%\build\windows\extralibs

          REM *** Deploy Qt ***
          %QTDIR%\bin\windeployqt.exe -xmlpatterns --no-patchqt --dir %APPVEYOR_BUILD_FOLDER%\build\windows\extralibs src/gui/hydrogen.exe

          REM *** Deploy other libraries ***
          set PYTHON=C:\Python38\python
          %PYTHON% -m pip install -r %APPVEYOR_BUILD_FOLDER%\windows\ci\requirements.txt
          %PYTHON% %APPVEYOR_BUILD_FOLDER%\windows\ci\copy_thirdparty_dlls.py --no-overwrite -V info -L %MSYS%\bin -d %APPVEYOR_BUILD_FOLDER%\build\windows\extralibs src/gui/hydrogen.exe src/core/libhydrogen-core-1.1.1.dll

          REM Chocolatey installs JACK dlls in c:\Windows, so
          REM copy_third_party_libs.py thinks it's a system lib and
          REM won't copy it.
          copy c:\Windows\%LIBJACK% %APPVEYOR_BUILD_FOLDER%\build\windows\extralibs

          REM *** Build installer ***
          cpack -G NSIS -v

          REM *** Run and verify installer ***
          set INSTDIR=C:\hydrogen
          mkdir %INSTDIR%
          FOR %%F IN (Hydrogen-*.exe) DO %%F /S /D=%INSTDIR%
          %PYTHON% -m pytest %APPVEYOR_BUILD_FOLDER%\windows\ci\test_installation.py --junitxml=test_installation.xml

on_finish:
  - cmd: if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH%  appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\build\CMakeCache.txt
  - cmd: if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH%  appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\build\CMakeFiles\CMakeOutput.log
  - cmd: if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH%  appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\build\CMakeFiles\CMakeError.log
  - cmd: if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH%  appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\build\Hydrogen-1.1.1-win64.exe || cmd /c "exit /b 0"
  - cmd: if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH%  appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\build\Hydrogen-1.1.1-win32.exe || cmd /c "exit /b 0"


  - cmd: |
      if %APPVEYOR_REPO_BRANCH%==%ARTIFACT_BRANCH% curl -F file=@%APPVEYOR_BUILD_FOLDER%\build\test_installation.xml https://ci.appveyor.com/api/testresults/junit/%APPVEYOR_JOB_ID%
